-------------------------------
CREATE OR REPLACE PACKAGE BODY PKG_LOAD_3NF_CE_CUSTOMERS AS

PROCEDURE PROC_LOAD_CE_CUSTOMERS IS

    L_PROCEDURE_NAME    VARCHAR2(2000) := 'PROC_LOAD_CE_CUSTOMERS';
    L_TABLE_NAME        VARCHAR2(2000) := 'CE_CUSTOMERS ';
    L_ROWS_PROCESSED    NUMBER;
    L_CONTEXT           VARCHAR2(2000) := 'LOADING CE_CUSTOMERS STARTS';
    L_ROW_COUNT_BEFORE  NUMBER;
    L_ROW_COUNT_AFTER   NUMBER;
    TYPE T_REF_C IS REF CURSOR;
    REF_CUR    T_REF_C;     
    
BEGIN

OPEN REF_CUR FOR 'SELECT COUNT(*)FROM BL_3NF.CE_CUSTOMERS';

FETCH REF_CUR INTO L_ROW_COUNT_BEFORE;
CLOSE REF_CUR;

PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE STARTS', L_ROW_COUNT_BEFORE, SYSDATE);

MERGE INTO BL_3NF.CE_CUSTOMERS TARG
USING 
       (SELECT DISTINCT
            BUSINESS_ENTITY AS CUSTOMER_NAME, 
            BUSINESS_ENTITY_ID AS  CUSTOMER_SRCID,
            'business_entities' AS  SOURCE_SYSTEM,
            'src_business_entities' AS SOURCE_TABLE,
            BUSINESS_ENTITY_ADDRESS AS ADDRESS_LINE_DESC,
            BUSINESS_EMAIL AS EMAIL, 
            CUTOMER_PHONE_NUMBER AS PHONE_NUMBER,
            CITY_DISTRICT_ID AS CITY_DISTRICT_ID,
            SYSDATE AS INSERT_DT,
            SYSDATE AS UPDATE_DT
        FROM
            BL_3NF.CE_CITY_DISTRICTS  C 
            LEFT JOIN BL_3NF.CE_CITIES CC ON  C.CITY_ID = CC.CITY_ID 
            LEFT JOIN SRC_BUSINESS_ENTITIES S ON UPPER(C.CITY_DISTRICT_NAME)= UPPER(S.BUSINESS_ENTITY_DISTRICT) AND UPPER(CC.CITY_NAME) = UPPER (S.BUSINESS_ENTITY_CITY)  
            WHERE BUSINESS_ENTITY IS NOT NULL 
       UNION ALL
        SELECT DISTINCT
            BUSINESS_ENTITY AS CUSTOMER_NAME, 
            BUSINESS_ENTITY_ID AS  CUSTOMER_SRCID,
            'individual_customers' AS  SOURCE_SYSTEM,
            'src_individual_customers' AS SOURCE_TABLE,
            BUSINESS_ENTITY_ADDRESS AS ADDRESS_LINE_DESC,
            BUSINESS_EMAIL AS EMAIL, 
            CUTOMER_PHONE_NUMBER AS PHONE_NUMBER,
            CITY_DISTRICT_ID AS CITY_DISTRICT_ID,
            SYSDATE AS INSERT_DT,
            SYSDATE AS UPDATE_DT
        FROM
            BL_3NF.CE_CITY_DISTRICTS  C 
            LEFT JOIN BL_3NF.CE_CITIES CC ON  C.CITY_ID = CC.CITY_ID 
            LEFT JOIN  SRC_INDIVIDUAL_CUSTOMERS S ON UPPER(C.CITY_DISTRICT_NAME)= UPPER(S.BUSINESS_ENTITY_DISTRICT) AND UPPER(CC.CITY_NAME) = UPPER (S.BUSINESS_ENTITY_CITY)  
            WHERE BUSINESS_ENTITY IS NOT NULL 
        ) SRC
ON  (TARG.CUSTOMER_SRCID = SRC.CUSTOMER_SRCID
    AND TARG.SOURCE_SYSTEM = SRC.SOURCE_SYSTEM
    AND TARG.SOURCE_TABLE = SRC.SOURCE_TABLE)
WHEN MATCHED THEN UPDATE SET 
        TARG.CUSTOMER_NAME = SRC.CUSTOMER_NAME,
        TARG.ADDRESS_LINE_DESC = SRC.ADDRESS_LINE_DESC,
        TARG.EMAIL = SRC.EMAIL,
        TARG.PHONE_NUMBER = SRC.PHONE_NUMBER,
        TARG.CITY_DISTRICT_ID = SRC.CITY_DISTRICT_ID,
        TARG.UPDATE_DT = SYSDATE
    WHERE   TARG.CUSTOMER_NAME <> SRC.CUSTOMER_NAME 
            AND TARG.ADDRESS_LINE_DESC <> SRC.ADDRESS_LINE_DESC
            AND TARG.EMAIL <> SRC.EMAIL
            AND TARG.PHONE_NUMBER <> SRC.PHONE_NUMBER
            AND TARG.CITY_DISTRICT_ID <> SRC.CITY_DISTRICT_ID
WHEN NOT MATCHED THEN INSERT 
    (CUSTOMER_ID, 
    CUSTOMER_SRCID, 
    SOURCE_SYSTEM, 
    SOURCE_TABLE, 
    CUSTOMER_NAME,
    ADDRESS_LINE_DESC,
    EMAIL,
    PHONE_NUMBER,
    CITY_DISTRICT_ID,    
    INSERT_DT, 
    UPDATE_DT)
VALUES (BL_3NF.CUST_SEQ.NEXTVAL,
    NVL(SRC.CUSTOMER_SRCID, 'n/a'), 
    SRC.SOURCE_SYSTEM, 
    SRC.SOURCE_TABLE, 
    NVL(SRC.CUSTOMER_NAME, 'n/a'), 
    NVL(SRC.ADDRESS_LINE_DESC, 'n/a'),
    NVL(SRC.EMAIL, 'n/a'),
    NVL(SRC.PHONE_NUMBER, 'n/a'),
    SRC.CITY_DISTRICT_ID,
    SYSDATE, 
    SYSDATE);

L_ROWS_PROCESSED := SQL%ROWCOUNT;
L_CONTEXT := 'LOADING CE_PRODUCTS FINISHED';
PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE END', L_ROWS_PROCESSED, SYSDATE);

COMMIT;

EXCEPTION 
    WHEN OTHERS THEN 
        L_CONTEXT := 'ERROR LOADING CE_CUSTOMERS';
        PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'ERROR', NULL, SYSDATE);
        ROLLBACK;
        RAISE;
    
END PROC_LOAD_CE_CUSTOMERS;

END PKG_LOAD_3NF_CE_CUSTOMERS;           
/
