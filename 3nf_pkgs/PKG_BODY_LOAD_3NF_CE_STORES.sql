-------------------------------
CREATE OR REPLACE PACKAGE BODY PKG_LOAD_3NF_CE_STORES AS

-PROCEDURE PROC_LOAD_CE_STORES IS

    L_PROCEDURE_NAME    VARCHAR2(2000) := 'PROC_LOAD_CE_STORES';
    L_TABLE_NAME        VARCHAR2(2000) := 'CE_STORES';
    L_ROWS_PROCESSED    NUMBER;
    L_CONTEXT           VARCHAR2(2000) := 'LOADING CE_STORES STARTS';
    L_ROW_COUNT_BEFORE  NUMBER;
    L_ROW_COUNT_AFTER   NUMBER;
    TYPE t_ref_c IS REF CURSOR;
    ref_cur    t_ref_c;     
    
BEGIN

OPEN ref_cur FOR 'SELECT COUNT(*)FROM BL_3NF.CE_STORES';

FETCH ref_cur INTO L_ROW_COUNT_BEFORE;
CLOSE ref_cur;

PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE STARTS', L_ROW_COUNT_BEFORE, SYSDATE);

MERGE INTO BL_3NF.CE_STORES TARG
USING 
       (SELECT DISTINCT TRIM(ADDRESS_STREET) AS ADDRESS_LINE_DESC,
            TRIM(STORE_ID) AS STORE_SRCID, 
            TRIM(STORE_) AS  STORE_NAME,
            'business_entities' AS  SOURCE_SYSTEM,
            'src_business_entities' AS SOURCE_TABLE,         
            TRIM(STORE_PHONE_NUMBER) AS PHONE_NUMBER,
            TRIM(C.CITY_DISTRICT_ID) AS CITY_DISTRICT_ID,
            SYSDATE AS INSERT_DT,
            SYSDATE AS UPDATE_DT
        FROM
            BL_3NF.CE_CITY_DISTRICTS  C 
            LEFT JOIN BL_3NF.CE_CITIES CC ON C.CITY_ID = CC.CITY_ID 
            LEFT JOIN SA_SOURCE.SRC_BUSINESS_ENTITIES S ON UPPER(C.CITY_DISTRICT_NAME )= UPPER(S.DISTRICT) AND UPPER(CC.CITY_NAME) = UPPER (S.CITY)
            Where ADDRESS_STREET is not null         
       UNION ALL
        SELECT DISTINCT TRIM(ADDRESS_STREET) AS ADDRESS_LINE_DESC,
            TRIM(STORE_ID) AS STORE_SRCID, 
            TRIM(STORE_) AS  STORE_NAME,
            'individual_customers' AS  SOURCE_SYSTEM,
            'src_individual_customers' AS SOURCE_TABLE,
            TRIM(STORE_PHONE_NUMBER) AS PHONE_NUMBER,
            TRIM(C.CITY_DISTRICT_ID) AS CITY_DISTRICT_ID,
            SYSDATE AS INSERT_DT,
            SYSDATE AS UPDATE_DT
        FROM
            BL_3NF.CE_CITY_DISTRICTS  C 
            LEFT JOIN BL_3NF.CE_CITIES CC ON  C.CITY_ID = CC.CITY_ID 
            LEFT JOIN  SA_SOURCE.SRC_INDIVIDUAL_CUSTOMERS S ON UPPER(C.CITY_DISTRICT_NAME )= UPPER(S.DISTRICT) AND UPPER(CC.CITY_NAME) = UPPER (S.CITY)
            WHERE  ADDRESS_STREET is not null
        ) SRC
ON  (TARG.STORE_SRCID = SRC.STORE_SRCID
    AND TARG.SOURCE_SYSTEM = SRC.SOURCE_SYSTEM
    AND TARG.SOURCE_TABLE = SRC.SOURCE_TABLE)
WHEN MATCHED THEN UPDATE SET 
    TARG.STORE_NAME = SRC.STORE_NAME,
    TARG.ADDRESS_LINE_DESC = SRC.ADDRESS_LINE_DESC,
    TARG.CITY_DISTRICT_ID = SRC.CITY_DISTRICT_ID,
    TARG.PHONE_NUMBER = SRC.PHONE_NUMBER,
    TARG.UPDATE_DT = SYSDATE
    WHERE   TARG.STORE_NAME <> SRC.STORE_NAME 
        OR TARG.ADDRESS_LINE_DESC <> SRC.ADDRESS_LINE_DESC
        OR TARG.PHONE_NUMBER <> SRC.PHONE_NUMBER
        OR TARG.CITY_DISTRICT_ID <> SRC.CITY_DISTRICT_ID
WHEN NOT MATCHED THEN INSERT 
    (STORE_ID, 
    STORE_SRCID, 
    SOURCE_SYSTEM, 
    SOURCE_TABLE, 
    STORE_NAME,
    CITY_DISTRICT_ID,
    ADDRESS_LINE_DESC,
    PHONE_NUMBER,
    INSERT_DT, 
    UPDATE_DT)
VALUES (BL_3NF.STORE_SEQ.NEXTVAL,
    NVL(SRC.STORE_SRCID, 'n/a'), 
    SRC.SOURCE_SYSTEM, 
    SRC.SOURCE_TABLE, 
    NVL(SRC.STORE_NAME, 'n/a'), 
    SRC.CITY_DISTRICT_ID,
    SRC.ADDRESS_LINE_DESC,
    SRC.PHONE_NUMBER,
    SYSDATE, 
    SYSDATE);

L_ROWS_PROCESSED := SQL%ROWCOUNT;
L_CONTEXT := 'LOADING CE_STORES FINISHED';
PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE END', L_ROWS_PROCESSED, SYSDATE);

COMMIT;

EXCEPTION 
    WHEN OTHERS THEN 
        L_CONTEXT := 'ERROR LOADING CE_STORES';
        PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'ERROR', NULL, SYSDATE);
        ROLLBACK;
        RAISE;
    
END PROC_LOAD_CE_STORES;


END PKG_LOAD_3NF_CE_STORES;           
/
