-------------------------------
CREATE OR REPLACE PACKAGE BODY PKG_LOAD_3NF_CA_PAYMENTS_INIT AS

PROCEDURE PROC_LOAD_CA_PAYMENTS_INIT IS

    L_PROCEDURE_NAME    VARCHAR2(2000) := 'PROC_LOAD_CA_PAYMENTS_INIT';
    L_TABLE_NAME        VARCHAR2(2000) := 'CA_PAYMENTS_INIT';
    L_ROWS_PROCESSED    NUMBER;
    L_CONTEXT           VARCHAR2(2000) := 'LOADING CA_PAYMENTS_INIT STARTS';
    L_ROW_COUNT_BEFORE  NUMBER;
    L_ROW_COUNT_AFTER   NUMBER;
    TYPE t_ref_c IS REF CURSOR;
    ref_cur    t_ref_c;     
    
BEGIN

OPEN ref_cur FOR 'SELECT COUNT(*)FROM BL_3NF.CA_PAYMENTS_INIT';

FETCH ref_cur INTO L_ROW_COUNT_BEFORE;
CLOSE ref_cur;

PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE STARTS', L_ROW_COUNT_BEFORE, SYSDATE);

INSERT INTO BL_3NF.CA_PAYMENTS (STORE_ID, EMPLOYEE_ID , CUSTOMER_ID, PRODUCT_ID , PAYMENT_TYPE_ID, SOURCE_SYSTEM, SOURCE_TABLE, PAYMENT_DATE, AMOUNT_PAID, PRODUCT_QTY, ORDER_NO, INSERT_DT, UPDATE_DT) 
     WITH PAY_DATA AS (       
        SELECT 
            CSS.STORE_ID AS STORE_ID, 
            E.EMPLOYEE_ID AS EMPLOYEE_ID,
            C.CUSTOMER_ID AS CUSTOMER_ID,
            P.PRODUCT_ID AS PRODUCT_ID,
            PT.PAYMENT_TYPE_ID AS PAYMENT_TYPE_ID,
            'business_entities' AS  SOURCE_SYSTEM,
            'src_business_entities' AS SOURCE_TABLE,
           TO_DATE(S.TRANSACTION_DATE,'dd-mm-yyyy')  AS PAYMENT_DATE,
            S.PAID_TOTAL AS AMOUNT_PAID,
            S.QUANTITY AS PRODUCT_QTY,
            S.ORDER_NO AS ORDER_NO,
            SYSDATE AS INSERT_DT,
            SYSDATE AS UPDATE_DT
         FROM
            SRC_BUSINESS_ENTITIES S
               LEFT JOIN BL_3NF.CE_PRODUCTS P ON S.PRODUCT = P.PRODUCT_NAME 
               LEFT JOIN BL_3NF.CE_CUSTOMERS C ON S.BUSINESS_ENTITY_ID = C.CUSTOMER_SRCID
               LEFT JOIN BL_3NF.CE_STORES CSS ON S.STORE_ID = CSS.STORE_SRCID 
               LEFT JOIN BL_3NF.CE_EMPLOYEES_SCD E ON S.EMPOYEE_ID = E.EMPLOYEE_ID 
               LEFT JOIN BL_3NF.CE_PAYMENT_TYPES PT ON S.PAYMENT_TYPE = PT.PAYMENT_TYPE_DESC             
            WHERE   S.PRODUCT = P.PRODUCT_NAME 
            AND     S.PAYMENT_TYPE = PT.PAYMENT_TYPE_DESC 
         UNION ALL 
         SELECT 
            CSS.STORE_ID AS STORE_ID, 
            E.EMPLOYEE_ID AS EMPLOYEE_ID,
            C.CUSTOMER_ID AS CUSTOMER_ID,
            P.PRODUCT_ID AS PRODUCT_ID,
            PT.PAYMENT_TYPE_ID AS PAYMENT_TYPE_ID,
            'individual_customers' AS  SOURCE_SYSTEM,
            'src_individual_customers' AS SOURCE_TABLE,
            TO_DATE(S.TRANSACTION_DATE,'dd-mm-yyyy') AS PAYMENT_DATE,
            S.PAID_TOTAL AS AMOUNT_PAID,
            S.QUANTITY AS PRODUCT_QTY,
            ORDER_NO AS ORDER_NO,
            SYSDATE AS INSERT_DT,
            SYSDATE AS UPDATE_DT
         FROM
            SRC_INDIVIDUAL_CUSTOMERS S
               LEFT JOIN BL_3NF.CE_PRODUCTS P ON S.PRODUCT = P.PRODUCT_NAME 
               LEFT JOIN BL_3NF.CE_CUSTOMERS C ON S.BUSINESS_ENTITY_ID = C.CUSTOMER_SRCID
               LEFT JOIN BL_3NF.CE_STORES CSS ON S.STORE_ID = CSS.STORE_SRCID 
               LEFT JOIN BL_3NF.CE_EMPLOYEES_SCD E ON S.EMPOYEE_ID = E.EMPLOYEE_ID 
               LEFT JOIN BL_3NF.CE_PAYMENT_TYPES PT ON S.PAYMENT_TYPE = PT.PAYMENT_TYPE_DESC             
            WHERE   S.PRODUCT = P.PRODUCT_NAME 
            AND     S.PAYMENT_TYPE = PT.PAYMENT_TYPE_DESC 
            )            
SELECT  STORE_ID, EMPLOYEE_ID , CUSTOMER_ID, PRODUCT_ID , PAYMENT_TYPE_ID,  NLV(SOURCE_SYSTEM, 'n/a'), NLV(SOURCE_TABLE, 'n/a'), NVL(PAYMENT_DATE, TO_DATE('31-12-9999','dd-mm-yyyy')), NVL(AMOUNT_PAID, -1), NVL(PRODUCT_QTY, -1), NVL(ORDER_NO, 'n/a'), INSERT_DT, UPDATE_DT
FROM PAY_DATA;   

L_ROWS_PROCESSED := SQL%ROWCOUNT;
L_CONTEXT := 'LOADING CA_PAYMENTS_INIT FINISHED';
PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE END', L_ROWS_PROCESSED, SYSDATE);

COMMIT;

EXCEPTION 
    WHEN OTHERS THEN 
        L_CONTEXT := 'ERROR LOADING CE_CITY_DISTRICTS';
        PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'ERROR', NULL, SYSDATE);
        ROLLBACK;
        RAISE;
    
END PROC_LOAD_CA_PAYMENTS_INIT;
          
END PKG_LOAD_3NF_CE_CITY_DISTRICTS;           
/
