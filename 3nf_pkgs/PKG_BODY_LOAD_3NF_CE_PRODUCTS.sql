-------------------------------
CREATE OR REPLACE PACKAGE BODY PKG_LOAD_3NF_CE_PRODUCTS AS

PROCEDURE PROC_LOAD_CE_PRODUCTS IS

    L_PROCEDURE_NAME    VARCHAR2(2000) := 'PROC_LOAD_CE_PRODUCTS ';
    L_TABLE_NAME        VARCHAR2(2000) := 'CE_PRODUCTS ';
    L_ROWS_PROCESSED    NUMBER;
    L_CONTEXT           VARCHAR2(2000) := 'LOADING CE_PRODUCTS STARTS';
    L_ROW_COUNT_BEFORE  NUMBER;
    L_ROW_COUNT_AFTER   NUMBER;
    TYPE t_ref_c IS REF CURSOR;
    ref_cur    t_ref_c;     
    
BEGIN

OPEN ref_cur FOR 'SELECT COUNT(*)FROM BL_3NF.CE_PRODUCTS';

FETCH ref_cur INTO L_ROW_COUNT_BEFORE;
CLOSE ref_cur;

PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE STARTS', L_ROW_COUNT_BEFORE, SYSDATE);

MERGE INTO BL_3NF.CE_PRODUCTS TARG
USING 
       (SELECT DISTINCT
             UPPER(S.PRODUCT) AS PRODUCT_NAME, 
             UPPER(S.PRODUCT) AS  PRODUCT_SRCID,
             'business_entities' AS  SOURCE_SYSTEM,
             'scr_business_entities' AS SOURCE_TABLE,
             TO_NUMBER(REPLACE (S.PRICE, ',', '.')) AS PRODUCT_PRICE, 
             C.PRODUCT_CATEGORY_ID AS  PRODUCT_CATEGORY_ID,
             SYSDATE AS INSERT_DT,
             SYSDATE AS UPDATE_DT
        FROM
           BL_3NF.CE_PRODUCT_CATEGORIES  C 
           LEFT JOIN  SRC_BUSINESS_ENTITIES S ON S.PROCUCT_CATEGORY = C.PRODUCT_CATEGORY_NAME 
           WHERE C.SOURCE_SYSTEM = 'business_entities'       
       UNION ALL
        SELECT DISTINCT
             UPPER(S.PRODUCT) AS PRODUCT_NAME, 
             UPPER(S.PRODUCT) AS  PRODUCT_SRCID,
            'individual_customers' AS  SOURCE_SYSTEM,
            'src_individual_customers' AS SOURCE_TABLE,
            TO_NUMBER(REPLACE (S.PRICE, ',', '.')) AS PRODUCT_PRICE, 
            C.PRODUCT_CATEGORY_ID AS  PRODUCT_CATEGORY_ID,
            SYSDATE AS INSERT_DT,
            SYSDATE AS UPDATE_DT
        FROM
            BL_3NF.CE_PRODUCT_CATEGORIES  C 
            LEFT JOIN  SRC_INDIVIDUAL_CUSTOMERS S ON S.PROCUCT_CATEGORY = C.PRODUCT_CATEGORY_NAME
            WHERE C.SOURCE_SYSTEM = 'individual_customers'
        ) SRC
ON  (TARG.PRODUCT_SRCID = SRC.PRODUCT_SRCID
    AND TARG.SOURCE_SYSTEM = SRC.SOURCE_SYSTEM
    AND TARG.SOURCE_TABLE = SRC.SOURCE_TABLE)
WHEN MATCHED THEN UPDATE SET 
        TARG.PRODUCT_NAME = SRC.PRODUCT_NAME,
        TARG.PRODUCT_PRICE = SRC.PRODUCT_PRICE,
        TARG.PRODUCT_CATEGORY_ID = SRC.PRODUCT_CATEGORY_ID,
        TARG.UPDATE_DT = SYSDATE
    WHERE   TARG.PRODUCT_NAME <> SRC.PRODUCT_NAME 
            OR TARG.PRODUCT_PRICE <> SRC.PRODUCT_PRICE
            OR TARG.PRODUCT_CATEGORY_ID <> SRC.PRODUCT_CATEGORY_ID
WHEN NOT MATCHED THEN INSERT 
    (PRODUCT_ID, 
    PRODUCT_SRCID, 
    SOURCE_SYSTEM, 
    SOURCE_TABLE, 
    PRODUCT_NAME,
    PRODUCT_PRICE,
    PRODUCT_CATEGORY_ID,
    INSERT_DT, 
    UPDATE_DT)
VALUES (BL_3NF.PRODUCT_SEQ.NEXTVAL,
    NVL(SRC.PRODUCT_SRCID, 'n/a'), 
    SRC.SOURCE_SYSTEM, 
    SRC.SOURCE_TABLE, 
    NVL(SRC.PRODUCT_NAME, 'n/a'), 
    SRC.PRODUCT_PRICE,
    SRC.PRODUCT_CATEGORY_ID,
    SYSDATE, 
    SYSDATE);

L_ROWS_PROCESSED := SQL%ROWCOUNT;
L_CONTEXT := 'LOADING CE_PRODUCTS FINISHED';
PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE END', L_ROWS_PROCESSED, SYSDATE);

COMMIT;

EXCEPTION 
    WHEN OTHERS THEN 
        L_CONTEXT := 'ERROR LOADING CE_PRODUCTS';
        PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'ERROR', NULL, SYSDATE);
        ROLLBACK;
        RAISE;
    
END PROC_LOAD_CE_PRODUCTS;

END PKG_LOAD_3NF_CE_PRODUCTS;           
/
