CREATE OR REPLACE PACKAGE BODY PKG_LOAD_DIM_EMPLOYEES_SCD AS

PROCEDURE PROC_LOAD_DIM_EMPLOYEES_SCD IS

    L_PROCEDURE_NAME    VARCHAR2(2000) := 'PROC_LOAD_DIM_EMPLOYEES_SCD';
    L_TABLE_NAME        VARCHAR2(2000) := 'DIM_EMPLOYEES_SCD';
    L_ROWS_PROCESSED    NUMBER;
    L_CONTEXT           VARCHAR2(2000) := 'LOADING DIM_EMPLOYEES_SCD STARTS';
    
BEGIN

OPEN ref_cur FOR 'SELECT COUNT(*)FROM DL_DM.DIM_EMPLOYEES_SCD';

FETCH ref_cur INTO L_ROW_COUNT_BEFORE;
CLOSE ref_cur;

PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE STARTS', L_ROW_COUNT_BEFORE, SYSDATE);

MERGE INTO BL_DM.DIM_EMPLOYEES_SCD TARG
USING 
       (SELECT 
            TO_CHAR(EMPLOYEE_ID) AS EMPLOYEE_ID,
            P.SOURCE_SYSTEM,
            P.SOURCE_TABLE,
            P.FIRST_NAME,
            P.LAST_NAME,
            P.EMAIL,
            P.PHONE_NUMBER,
            P.START_DT,
            P.END_DATE,
            P.IS_ACTIVE,
            TO_CHAR(P.JOB_TITLE_ID) AS JOB_TITLE_ID, 
            PT.JOB_TITLE_DESC
        FROM
             BL_3NF.CE_EMPLOYEES_SCD P 
             JOIN BL_3NF.CE_JOB_TITLES PT ON PT.JOB_TITLE_ID = P.JOB_TITLE_ID
             WHERE P.SOURCE_SYSTEM = PT.SOURCE_SYSTEM
             AND P.SOURCE_TABLE = PT.SOURCE_TABLE) SRC
ON  (TARG.EMPLOYEE_ID = SRC.EMPLOYEE_ID
AND TARG.SOURCE_SYSTEM = SRC.SOURCE_SYSTEM
AND TARG.SOURCE_TABLE = SRC.SOURCE_TABLE)
WHEN MATCHED THEN UPDATE SET 
    TARG.FIRST_NAME = SRC.FIRST_NAME,
    TARG.LAST_NAME = SRC.LAST_NAME,
    TARG.EMAIL = SRC.EMAIL,
    TARG.PHONE_NUMBER = SRC.PHONE_NUMBER,
    TARG.START_DT = SRC.START_DT,
    TARG.END_DT = SRC.END_DATE,
    TARG.IS_ACTIVE = SRC.IS_ACTIVE,
    TARG.JOB_TITLE_ID = SRC.JOB_TITLE_ID,
    TARG.JOB_TITLE_DESC = SRC.JOB_TITLE_DESC,
    TARG.UPDATE_DT = SYSDATE
WHERE    TARG.FIRST_NAME <> SRC.FIRST_NAME 
    AND TARG.LAST_NAME <> SRC.LAST_NAME
    AND TARG.EMAIL <> SRC.EMAIL
    AND TARG.PHONE_NUMBER <> SRC.PHONE_NUMBER
    AND TARG.START_DT <> SRC.START_DT
    AND TARG.END_DT <> SRC.END_DATE
    AND TARG.IS_ACTIVE <> SRC.IS_ACTIVE
    AND TARG.JOB_TITLE_ID <> SRC.JOB_TITLE_ID
    AND TARG.JOB_TITLE_DESC <> SRC.JOB_TITLE_DESC
WHEN NOT MATCHED THEN INSERT 
    (EMPLOYEE_SURR_ID, 
    EMPLOYEE_ID, 
    SOURCE_SYSTEM, 
    SOURCE_TABLE, 
    FIRST_NAME,
    LAST_NAME,
    EMAIL,
    PHONE_NUMBER,
    START_DT,
    END_DT,
    IS_ACTIVE,
    JOB_TITLE_ID,
    JOB_TITLE_DESC,
    INSERT_DT, 
    UPDATE_DT)
VALUES (BL_DM.DIM_EMP_SEQ.NEXTVAL, 
    NVL(SRC.EMPLOYEE_ID, 'n/a'), 
    SRC.SOURCE_SYSTEM, 
    SRC.SOURCE_TABLE,
    NVL(SRC.FIRST_NAME, 'n/a'), 
    NVL(SRC.LAST_NAME, 'n/a'), 
    NVL(SRC.EMAIL, 'n/a'), 
    NVL(SRC.PHONE_NUMBER, 'n/a'),
    SRC.START_DT,
    SRC.END_DATE,
    SRC.IS_ACTIVE,
    SRC.JOB_TITLE_ID,
    SRC.JOB_TITLE_DESC,
    SYSDATE, 
    SYSDATE);

L_ROWS_PROCESSED := SQL%ROWCOUNT;
L_CONTEXT := 'LOADING DIM_EMPLOYEES_SCD FINISHED';
PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE END', L_ROWS_PROCESSED, SYSDATE);

COMMIT;

EXCEPTION 
    WHEN OTHERS THEN 
        L_CONTEXT := 'ERROR LOADING DIM_EMPLOYEES_SCD';
        PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'ERROR', NULL, SYSDATE);
        ROLLBACK;
        RAISE;
    
END PROC_LOAD_DIM_EMPLOYEES_SCD;
          
BEGIN
PROC_LOAD_DIM_EMPLOYEES_SCD;
END;
