CREATE OR REPLACE PACKAGE BODY PKG_LOAD_DIM_CUSTOMERS AS

PROCEDURE PROC_LOAD_DIM_CUSTOMERS IS

    L_PROCEDURE_NAME    VARCHAR2(2000) := 'PROC_LOAD_DIM_CUSTOMERS';
    L_TABLE_NAME        VARCHAR2(2000) := 'DIM_CUSTOMERS';
    L_ROWS_PROCESSED    NUMBER;
    L_CONTEXT           VARCHAR2(2000) := 'LOADING DIM_CUSTOMERS STARTS';
    TYPE t_ref_c IS REF CURSOR;
    ref_cur    t_ref_c;      
    
BEGIN

OPEN ref_cur FOR 'SELECT COUNT(*)FROM DL_DM.DIM_CUSTOMERS';

FETCH ref_cur INTO L_ROW_COUNT_BEFORE;
CLOSE ref_cur;

PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE STARTS', L_ROW_COUNT_BEFORE, SYSDATE);

MERGE INTO BL_DM.DIM_CUSTOMERS TARG
USING 
       (SELECT 
            TO_CHAR(S.CUSTOMER_ID) AS CUSTOMER_ID,
            S.SOURCE_SYSTEM,
            S.SOURCE_TABLE,
            S.CUSTOMER_NAME,
            S.EMAIL, 
            S.PHONE_NUMBER,             
            TO_CHAR(CT.CITY_ID) AS CITY_ID, 
            C.CITY_NAME,
            TO_CHAR(S.CITY_DISTRICT_ID) AS CITY_DISTRICT_ID,
            CT.CITY_DISTRICT_NAME,
            S.ADDRESS_LINE_DESC
        FROM
             BL_3NF.CE_CUSTOMERS S 
             JOIN BL_3NF.CE_CITY_DISTRICTS CT ON S.CITY_DISTRICT_ID = CT.CITY_DISTRICT_ID
             JOIN BL_3NF.CE_CITIES C ON CT.CITY_ID = C.CITY_ID
             WHERE S.SOURCE_SYSTEM = CT.SOURCE_SYSTEM
             AND CT.SOURCE_SYSTEM  = C.SOURCE_SYSTEM 
             AND S.SOURCE_TABLE = CT.SOURCE_TABLE
             AND CT.SOURCE_TABLE = C.SOURCE_TABLE) SRC
ON  (TARG.CUSTOMER_ID = SRC.CUSTOMER_ID
AND TARG.SOURCE_SYSTEM = SRC.SOURCE_SYSTEM
AND TARG.SOURCE_TABLE = SRC.SOURCE_TABLE)
WHEN MATCHED THEN UPDATE SET 
    TARG.CUSTOMER_NAME = SRC.CUSTOMER_NAME,
    TARG.ADDRESS_LINE_DESC = SRC.ADDRESS_LINE_DESC,
    TARG.CITY_ID = SRC.CITY_ID,
    TARG.CITY_NAME = SRC.CITY_NAME,
    TARG.CITY_DISTRICT_ID = SRC.CITY_DISTRICT_ID,
    TARG.CITY_DISTRICT_NAME = SRC.CITY_DISTRICT_NAME,
    TARG.EMAIL = SRC.EMAIL,
    TARG.PHONE_NUMBER = SRC.PHONE_NUMBER,
    TARG.UPDATE_DT = SYSDATE
    WHERE   TARG.CUSTOMER_NAME <> SRC.CUSTOMER_NAME 
        AND TARG.ADDRESS_LINE_DESC <> SRC.ADDRESS_LINE_DESC
        AND TARG.CITY_ID <> SRC.CITY_ID
        AND TARG.CITY_NAME <> SRC.CITY_NAME
        AND TARG.CITY_DISTRICT_ID <> SRC.CITY_DISTRICT_ID
        AND TARG.CITY_DISTRICT_NAME <> SRC.CITY_DISTRICT_NAME
        AND TARG.EMAIL <> SRC.EMAIL
        AND TARG.PHONE_NUMBER <> SRC.PHONE_NUMBER
WHEN NOT MATCHED THEN INSERT 
    (CUSTOMER_SURR_ID, 
    CUSTOMER_ID, 
    SOURCE_SYSTEM, 
    SOURCE_TABLE, 
    CUSTOMER_NAME,
    ADDRESS_LINE_DESC,
    CITY_DISTRICT_ID,
    CITY_DISTRICT_NAME,
    CITY_ID,
    CITY_NAME,
    EMAIL,
    PHONE_NUMBER,
    INSERT_DT, 
    UPDATE_DT)
VALUES (BL_DM.DIM_CUST_SEQ.NEXTVAL, 
    NVL(SRC.CUSTOMER_ID, 'n/a'), 
    SRC.SOURCE_SYSTEM, 
    SRC.SOURCE_TABLE,
    NVL(SRC.CUSTOMER_NAME, 'n/a'), 
    NVL(SRC.ADDRESS_LINE_DESC, 'n/a'),
    SRC.CITY_DISTRICT_ID,
    SRC.CITY_DISTRICT_NAME,
    SRC.CITY_ID,
    SRC.CITY_NAME,
    SRC.EMAIL,
    SRC.PHONE_NUMBER,
    SYSDATE, 
    SYSDATE);

L_ROWS_PROCESSED := SQL%ROWCOUNT;
L_CONTEXT := 'LOADING DIM_CUSTOMERS FINISHED';
PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'PROCEDURE END', L_ROWS_PROCESSED, SYSDATE);

COMMIT;

EXCEPTION 
    WHEN OTHERS THEN 
        L_CONTEXT := 'ERROR LOADING DIM_CUSTOMERS';
        PROC_LOG(L_PACKAGE_NAME, L_PROCEDURE_NAME, L_TABLE_NAME, L_CONTEXT, 'ERROR', NULL, SYSDATE);
        ROLLBACK;
        RAISE;
    
END PROC_LOAD_DIM_CUSTOMERS;
          
BEGIN
PROC_LOAD_DIM_CUSTOMERS;
END;

